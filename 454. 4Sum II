class Solution {
public:
    int fourSumCount(vector<int>& A, vector<int>& B, vector<int>& C, vector<int>& D) {
        unordered_map<int,int> m1,m2;
        int n=A.size();
        int res=0;
        for(int i=0;i<n;++i){
            for(int j=0;j<n;++j){
                ++m1[A[i]+B[j]];
                ++m2[C[i]+D[j]];
            }
        }
        for(auto e:m1){
            res+=(e.second*m2[-e.first]);
        }
        return res;
    }
};
============================================
454. 4Sum II
Given four lists A, B, C, D of integer values, compute how many tuples (i, j, k, l) there are such that A[i] + B[j] + C[k] + D[l] is zero.

To make problem a bit easier, all A, B, C, D have same length of N where 0 ≤ N ≤ 500. All integers are in the range of -228 to 228 - 1 and the result is guaranteed to be at most 231 - 1.
