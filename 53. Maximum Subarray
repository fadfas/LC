class Solution {
public:
    //this is a optimization problem, which can be usually solved by DP
    int maxSubArray(vector<int>& nums) {
        if(nums.empty()){
            return -1;
        }
        int result=nums[0];
        int imax=nums[0];
        for(int i=1;i<nums.size();++i){
            imax=imax>0?imax+nums[i]:nums[i];
            result=max(result,imax);
        }
        return result;
    }
};

==============================================================================
53. Maximum Subarray
Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.
