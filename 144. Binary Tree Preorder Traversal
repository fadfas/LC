/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution { //用循环的方法前序遍历二叉树
public:
    vector<int> preorderTraversal(TreeNode* root) {
        vector<int> result={};
        if(!root){
            return result;
        }
        stack<TreeNode*> nodeStack;
        nodeStack.push(root);
        TreeNode* pCurrent=nullptr;
        while(!nodeStack.empty()){
            pCurrent=nodeStack.top();
            result.push_back(pCurrent->val);
            nodeStack.pop();
            if(pCurrent->right)
                nodeStack.push(pCurrent->right);
            if(pCurrent->left)
                nodeStack.push(pCurrent->left);
        }
        return result;
    }
};
================================================
144. Binary Tree Preorder Traversal
Given a binary tree, return the preorder traversal of its nodes' values.
