class Solution {
public:
    string licenseKeyFormatting(string S, int K) {
        int size=S.size();
        string res="";
        for(int i=size-1;i>=0;--i){//不要再写成++i了！！！！
            if(S[i]!='-'){
                if(res.size()%(K+1)==K){//学习这种方法，每k+1个字符是'-'的计算方法
                    res+='-';
                }
                res+=toupper(S[i]);//学习toupper()函数
            }
        }
        reverse(res.begin(),res.end());
        return res;
    }
};
===============================================
482. License Key Formatting
You are given a license key represented as a string S which consists only alphanumeric character and dashes. The string is separated into N+1 groups by N dashes.

Given a number K, we would want to reformat the strings such that each group contains exactly K characters, except for the first group which could be shorter than K, but still must contain at least one character. Furthermore, there must be a dash inserted between two groups and all lowercase letters should be converted to uppercase.

Given a non-empty string S and a number K, format the string according to the rules described above.

Example 1:
Input: S = "5F3Z-2e-9-w", K = 4

Output: "5F3Z-2E9W"

Explanation: The string S has been split into two parts, each part has 4 characters.
Note that the two extra dashes are not needed and can be removed.
