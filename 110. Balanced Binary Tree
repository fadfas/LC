/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool isBalanced(TreeNode* root) {
        if(!root){
            return true;
        }
        return isBalancedCore(root)!=-1;
    }
    
    int isBalancedCore(TreeNode* pNode){
        if(!pNode){
            return 0;
        }
        int leftDepth=isBalancedCore(pNode->left);
        if(leftDepth==-1){
            return -1;
        }
        int rightDepth=isBalancedCore(pNode->right);
        if(rightDepth==-1){
            return -1;
        }
        return abs(leftDepth-rightDepth)>1?-1:max(leftDepth,rightDepth)+1;
    }
};
=====================================================
110. Balanced Binary Tree
Given a binary tree, determine if it is height-balanced.

