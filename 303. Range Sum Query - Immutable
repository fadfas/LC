class NumArray {//及acc(i+1)代表从nums[0]到num[i]的和，因此，题目中的从i到j的求和，就变成了从acc[i+1]
public://减去从（0到j-1的和），也就是acc[j]
    NumArray(vector<int> nums) {
        acc.push_back(0);
        for(auto e:nums){
            acc.push_back(acc.back()+e);//back()函数的使用！！！
        }
    }
    
    int sumRange(int i, int j) {
        return acc[j+1]-acc[i];
    }
private:
    vector<int> acc;
};

/**
 * Your NumArray object will be instantiated and called as such:
 * NumArray obj = new NumArray(nums);
 * int param_1 = obj.sumRange(i,j);
 */
 =========================================
 303. Range Sum Query - Immutable
Given an integer array nums, find the sum of the elements between indices i and j (i ≤ j), inclusive.

Example:
Given nums = [-2, 0, 3, -5, 2, -1]

sumRange(0, 2) -> 1
sumRange(2, 5) -> -1
sumRange(0, 5) -> -3
