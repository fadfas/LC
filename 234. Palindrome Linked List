/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        if(!head){
            return false;
        }
        ListNode *pFast = head, *pSlow = head;
        int len = 0;
        while (pFast && pFast->next)
        {
            ++len;
            pFast = pFast->next->next;
            pSlow = pSlow->next;
        }
        ListNode *pCur = pSlow, *pPrev = nullptr, *pNext = nullptr;
        while(pCur){
            pNext = pCur->next;
            pCur->next = pPrev;
            pPrev = pCur;
            pCur = pNext;
        }
        pCur = head;
        for (int i = 0; i < len; ++i)
        {
            if(pPrev->val!=pCur->val){
                return false;
            }
            pPrev = pPrev->next;
            pCur = pCur->next;
        }
        return true;
    }
};
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        left=head;
        return helper(head);
    }
private:
    ListNode* left;
    bool helper(ListNode* right){
        if(right==nullptr){
            return true;
        }
        bool res=helper(right->next);
        res=res&&(left->val==right->val);
        left=left->next;
        return res;
    }
};
==============================================
这道题一定要画图，分别是5个节点和4个节点的情况即可！！！
234. Palindrome Linked List
Given a singly linked list, determine if it is a palindrome.

Example 1:

Input: 1->2
Output: false
Example 2:

Input: 1->2->2->1
Output: true
