class Solution {
public://摩尔投票法 Moore Voting  前提是数组中一定要有过半数的存在才能使用
    int majorityElement(vector<int>& nums) {
        int res=0,cnt=0;
        for(auto e:nums){
            if(cnt==0){
                res=e;
                ++cnt;
            }else{
                cnt+=(res==e?1:-1);
            }
        }
        return res;
    }
};

class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int n=nums.size();
        int res=0;
        for(int i=0;i<32;++i){
            int ones=0,zeros=0;
            for(auto e:nums){
                if(ones>n/2||zeros>n/2)//优化点！！！
                    break;
                if(e&(1<<i)){
                    ++ones;
                }else{
                    ++zeros;
                }
            }
            if(ones>zeros){
                res|=(1<<i);
            }
        }
        return res;
    }
};
============================================
169. Majority Element
Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.

You may assume that the array is non-empty and the majority element always exist in the array.

Example 1:

Input: [3,2,3]
Output: 3
Example 2:

Input: [2,2,1,1,1,2,2]
Output: 2
