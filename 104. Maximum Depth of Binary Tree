/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int maxDepth(TreeNode* root) {
        if(!root){
            return 0;
        }
        return maxDepthRecursively(root);
    }
private:
    int maxDepthRecursively(TreeNode* pNode){
        if(pNode==nullptr){
            return 0;
        }
        
        return max(maxDepthRecursively(pNode->left)+1,maxDepthRecursively(pNode->right)+1);
    }
};
=================================================
104. Maximum Depth of Binary Tree
Given a binary tree, find its maximum depth.

The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.
