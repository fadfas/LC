class Solution {//和300 Longest Increasing Sequence 中第一个解法的fake数组很相似
public://学习这种将数组变成使用几个指针代替的解法
    bool increasingTriplet(vector<int>& nums) {
        int m1=INT_MAX,m2=INT_MAX;
        for(auto e:nums){
            if(e<=m1){
                m1=e;
            }else if(e<=m2){  //注意这种 if {} else if{} ，如果进入此行对应于m1<=e<=m2
                m2=e;
            }else{
                return true;
            }
        }
        return false;
    }
};
=========================================
334. Increasing Triplet Subsequence
Given an unsorted array return whether an increasing subsequence of length 3 exists or not in the array.

Formally the function should:

Return true if there exists i, j, k 
such that arr[i] < arr[j] < arr[k] given 0 ≤ i < j < k ≤ n-1 else return false.
Note: Your algorithm should run in O(n) time complexity and O(1) space complexity.

Example 1:

Input: [1,2,3,4,5]
Output: true
Example 2:

Input: [5,4,3,2,1]
Output: false
