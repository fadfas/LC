class Solution {
public:
    string crackSafe(int n, int k) {
        string res(n,'0');
        set<string> tried;
        tried.insert(res);
        for(int i=0;i<pow(k,n);++i){
            string pre=res.substr(res.size()-n+1,n-1);
            for(int j=k-1;j>=0;--j){
                string cur=pre+to_string(j);
                if(!tried.count(cur)){
                    res+=to_string(j);
                    tried.insert(cur);
                    break;
                }
            }
        }
        return res;
    }
};
==========================================
原理见：https://www.jianshu.com/p/3bcd521df954
也可以看LeetCode给出的solution，讲解的比较具体
753. Cracking the Safe
There is a box protected by a password. The password is n digits, where each letter can be one of the first k digits 0, 1, ..., k-1.

You can keep inputting the password, the password will automatically be matched against the last n digits entered.

For example, assuming the password is "345", I can open it when I type "012345", but I enter a total of 6 digits.

Please return any string of minimum length that is guaranteed to open the box after the entire string is inputted.
