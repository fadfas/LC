/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> res;
        if(root==nullptr){
            return res;
        }
        TreeNode *pCur = root;
        stack<TreeNode *> s;
        while(pCur||!s.empty()){
            while(pCur){
                s.push(pCur);
                pCur = pCur->left;
            }
            pCur = s.top();
            s.pop();
            res.push_back(pCur->val);
            pCur = pCur->right;
        }
        return res;
    }
};
========================================================
94. Binary Tree Inorder Traversal
Given a binary tree, return the inorder traversal of its nodes' values.
