class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        int n = nums.size();
        vector<int> res(n,1);
        int before = 1, after = 1;
        for (int i = 0, j = n - 1; i < n;++i,--j){
            res[i] *= before;
            res[j] *= after;
            before *= nums[i];
            after *= nums[j];
        }
        return res;
    }
};

==================================================
238. Product of Array Except Self
Given an array nums of n integers where n > 1,  return an array output such that output[i] is equal to the product of all the elements of nums except nums[i].

Example:

Input:  [1,2,3,4]
Output: [24,12,8,6]
Note: Please solve it without division and in O(n).

Follow up:
Could you solve it with constant space complexity? (The output array does not count as extra space for the purpose of space complexity analysis.
