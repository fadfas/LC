class Solution
{
public:
    bool backspaceCompare(string s, string t)
    {
        int l = s.size() - 1, r = t.size() - 1;
        int cnt_s = 0, cnt_t = 0;
        while (true)
        {
            while (l >= 0 && (s[l]=='#'||cnt_s>0))
            {
                if (s[l] == '#')
                {
                    ++cnt_s;
                }else{
                    --cnt_s;
                }
                --l;

            }
           while (r>= 0 && (t[r]=='#'||cnt_t>0))
            {
                if (t[r] == '#')
                {
                    ++cnt_t;
                }else{
                    --cnt_t;
                }
                --r;
            }
            if (l>=0 && r>=0 && s[l]==t[r])
            {
                --l, --r;
            }else{
                return l == -1 && r == -1;
            }
        }
        
    }
};
===========================================
844. Backspace String Compare
Given two strings S and T, return if they are equal when both are typed into empty text editors. # means a backspace character.

Example 1:

Input: S = "ab#c", T = "ad#c"
Output: true
Explanation: Both S and T become "ac".
