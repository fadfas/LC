class Solution {
public:
    vector<int> intersection(vector<int>& nums1, vector<int>& nums2) {
        vector<int> res;
        sort(nums1.begin(), nums1.end());
        sort(nums2.begin(), nums2.end());

        int first = 0, second = 0;
        while (first < nums1.size() && second < nums2.size())
        {
            int n1 = nums1[first], n2 = nums2[second];
            if(n1<n2){
                ++first;
            }else if(n1>n2){
                ++second;
            }else{
                res.push_back(n1);
                while(first < nums1.size()&&nums1[first]==n1){
                    ++first;
                }
                while(second < nums2.size()&&nums2[second]==n1){
                    ++second;
                }
            }
        }
        return res;
    }
};
class Solution {
public:
    vector<int> intersection(vector<int>& nums1, vector<int>& nums2) {
        set<int> temp(nums1.begin(),nums1.end());
        set<int> res;
        for(auto e:nums2){
            if(temp.count(e)){
                res.insert(e);
            }
        }
        return vector<int>(res.begin(),res.end());//学习这种定义的方法
    }
};
=======================================
349. Intersection of Two Arrays
Given two arrays, write a function to compute their intersection.

Example 1:

Input: nums1 = [1,2,2,1], nums2 = [2,2]
Output: [2]
Example 2:

Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]
Output: [9,4]
Note:

Each element in the result must be unique.
The result can be in any order.
