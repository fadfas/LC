class Solution {
public:
    void wiggleSort(vector<int>& nums) {
        int n=nums.size();
        if(n<=1)
            return;
        int k=(n+1)/2;//分别用长度为 5 和 4的情况画一画就明白了
        int j=n;
        vector<int> temp=nums;
        sort(temp.begin(),temp.end());
        for(int i=0;i<n;++i){
            nums[i]=((i&1)==0)?temp[--k]:temp[--j];//注意 i&1的优先级很低！！！  另外要从每个分段的末尾从后往前填充，否则 4 5 5 6会有错误
        }
        return;
    }
};
==========================================
324. Wiggle Sort II
Given an unsorted array nums, reorder it such that nums[0] < nums[1] > nums[2] < nums[3]....

Example 1:

Input: nums = [1, 5, 1, 1, 6, 4]
Output: One possible answer is [1, 4, 1, 5, 1, 6].
Example 2:

Input: nums = [1, 3, 2, 2, 3, 1]
Output: One possible answer is [2, 3, 1, 3, 1, 2].
