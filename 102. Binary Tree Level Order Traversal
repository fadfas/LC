/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int> > res;
        if(root==nullptr){
            return res;
        }
        queue<TreeNode *> q;
        q.push(root);
        // q.push(nullptr);
        while(!q.empty()){
            vector<int> tmp;
            int size = q.size();
            for (int i = 0; i < size; ++i)
            {
                TreeNode *p = q.front();
                q.pop();
                tmp.push_back(p->val);
                if(p->left){
                    q.push(p->left);
                }
                if(p->right){
                    q.push(p->right);
                }
            }
            res.push_back(tmp);
        }
        return res;
    }
};
====================================
102. Binary Tree Level Order Traversal
Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).
