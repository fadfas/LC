class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        int left = 0, right = 0;
        while(right<nums.size()){
            nums[left]= nums[right];//不是swap
            while (right<nums.size() && nums[left] == nums[right])
            {//类似的语句中，都要提前判断right是否合法
                right++;
            }
            left++;
        }
        return left;
    }
};
class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        if(nums.size()<=1){
            return nums.size();
        }
        int i=0,j=1;
        while(j<nums.size()){
            if(nums[i]!=nums[j]){
                i++;
                nums[i]=nums[j];
            }
            ++j;
        }
        return i+1;
    }
};
=====================================================================
26. Remove Duplicates from Sorted Array
Given a sorted array nums, remove the duplicates in-place such that each element appear only once and return the new length.

Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.
