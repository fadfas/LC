/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Codec {
public:

    // Encodes a tree to a single string.
    string serialize(TreeNode* root) {
        string res="";
        serializeCore(root,res);
        return res;
    }

    // Decodes your encoded data to tree.
    TreeNode* deserialize(string data) {
        return deserializeCore(data);
    }
private:
    void serializeCore(TreeNode* pNode,string& res){
        if(!pNode){
            //res+='# ';这样写法是错的，因为''代表着char类型！！！
            res+="# ";
            return;
        }
        res+=(to_string(pNode->val)+" ");
        serializeCore(pNode->left,res);
        serializeCore(pNode->right,res);
    }
    TreeNode* deserializeCore(string& data){
        string next=getNext(data);
        if(next=="#"){//别写成'#'
            return nullptr;
        }
        TreeNode* pNode=new TreeNode(stoi(next));
        pNode->left=deserializeCore(data);
        pNode->right=deserializeCore(data);
        return pNode;
    }
    string getNext(string& data){
        int pos=data.find(' ');
        string res=data.substr(0,pos);
        data=data.substr(pos+1);
        return res;
    }
};

=============================================
297. Serialize and Deserialize Binary Tree
Serialization is the process of converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment.

Design an algorithm to serialize and deserialize a binary tree. There is no restriction on how your serialization/deserialization algorithm should work. You just need to ensure that a binary tree can be serialized to a string and this string can be deserialized to the original tree structure.

Example: 

You may serialize the following tree:

    1
   / \
  2   3
     / \
    4   5

as "[1,2,3,null,null,4,5]"
