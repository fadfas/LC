class ExamRoom {
public:
    ExamRoom(int n) {
        vol=n;
    }
    
    int seat() {
        if(s.empty()){
            s.insert(0);
            return 0;
        }
        int res=0;
        int dist=0;
        int pre=0;
        if(s.find(0)==s.end()){
            dist=(*s.begin()-0);//首、尾就不要除二了
            res=0;
        }
        for(auto it=s.begin();it!=s.end();++it){
            int tmp=(*it-pre)/2;//dist一定要除以二后存下来，因为根据规则，两个座位距离5和两个座位距离4，是一样的
            if(tmp>dist){//（因为在新人插入后，距离最近的考生，其间距都是1)
                res=(*it+pre)/2;//也就是说： 0(*) 1 2 3 4(*) 5 6 7 8 9(*)这种情况，放在2、6、7，距离最近的考生，距离都是1
                dist=tmp;
            }
            pre=*it;
        }
        if(s.find(vol-1)==s.end()){
            int tmp=vol-1-*(--s.end());
            if(tmp>dist){
                res=vol-1;
            }
        }
        s.insert(res);
        return res;
    }
    
    void leave(int p) {
        s.erase(p);
    }
private:
    int vol;
    set<int> s;
};

/**
 * Your ExamRoom object will be instantiated and called as such:
 * ExamRoom* obj = new ExamRoom(n);
 * int param_1 = obj->seat();
 * obj->leave(p);
 */
/**
 * Your ExamRoom object will be instantiated and called as such:
 * ExamRoom obj = new ExamRoom(N);
 * int param_1 = obj.seat();
 * obj.leave(p);
 */
 ===============================================
 855. Exam Room
In an exam room, there are N seats in a single row, numbered 0, 1, 2, ..., N-1.

When a student enters the room, they must sit in the seat that maximizes the distance to the closest person.  If there are multiple such seats, they sit in the seat with the lowest number.  (Also, if no one is in the room, then the student sits at seat number 0.)

Return a class ExamRoom(int N) that exposes two functions: ExamRoom.seat() returning an int representing what seat the student sat in, and ExamRoom.leave(int p) representing that the student in seat number p now leaves the room.  It is guaranteed that any calls to ExamRoom.leave(p) have a student sitting in seat p.

 

Example 1:

Input: ["ExamRoom","seat","seat","seat","seat","leave","seat"], [[10],[],[],[],[],[4],[]]
Output: [null,0,9,4,2,null,5]
Explanation:
ExamRoom(10) -> null
seat() -> 0, no one is in the room, then the student sits at seat number 0.
seat() -> 9, the student sits at the last seat number 9.
seat() -> 4, the student sits at the last seat number 4.
seat() -> 2, the student sits at the last seat number 2.
leave(4) -> null
seat() -> 5, the student sits at the last seat number 5.
