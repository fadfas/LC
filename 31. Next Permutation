class Solution {
public:
    void nextPermutation(vector<int>& nums) {
        if(nums.size()==0){
            return;
        }
        
        int n=nums.size();
        int i=n-2,j=n-1; //j的定义不能为n-2
        for(;i>=0;--i){ //不能在for内部定义i
            if(nums[i]<nums[i+1])
                break;
        }
        if(i<0){
            reverse(nums.begin(),nums.end()); //记住reverse函数！！
        }else{
            for(;j>i;--j){
                if(nums[j]>nums[i])
                    break;
            }
            swap(nums[i],nums[j]);
            reverse(nums.begin()+i+1,nums.end());  //注意不能用reverse(nums[i+1],num[n-1])这种写法！！
        }
    }
};

===============================================================================
31. Next Permutation
Implement next permutation, which rearranges numbers into the lexicographically next greater permutation of numbers.

If such arrangement is not possible, it must rearrange it as the lowest possible order (ie, sorted in ascending order).

The replacement must be in-place and use only constant extra memory.
