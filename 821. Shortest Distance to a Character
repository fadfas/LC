class Solution {//对于这种每一个位置，都可能和其左侧及右侧有关的问题，可以尝试用这种从左至右遍历一遍，再从右至左遍历的
public://的方法
    vector<int> shortestToChar(string S, char C) {
        int n=S.size();
        int pos=-1;
        vector<int> res(n,0);
        for(int i=0;i<n;++i){
            if(S[i]==C)
                pos=i;
            res[i]=pos==-1?n:i-pos;
        }
        pos=-1;
        for(int i=n-1;i>=0;--i){
            if(S[i]==C)
                pos=i;
            res[i]=min(res[i],pos==-1?n:pos-i);
        }
        return res;
    }
};
========================================
821. Shortest Distance to a Character
Given a string S and a character C, return an array of integers representing the shortest distance from the character C in the string.

Example 1:

Input: S = "loveleetcode", C = 'e'
Output: [3, 2, 1, 0, 1, 0, 0, 1, 2, 2, 1, 0]
