/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int> res;
        if(root==nullptr){
            return res;
        }
        stack<TreeNode *> s;
		TreeNode *pCur = root, *prev = nullptr;
		while (pCur || !s.empty())
		{
			while(pCur){
				s.push(pCur);
				pCur = pCur->left;
			}
			pCur=s.top();
			s.pop();
			if(pCur->right==nullptr||pCur->right==prev){
				res.push_back(pCur->val);
				prev=pCur;
				pCur = nullptr;
			}else{
				s.push(pCur);
				pCur = pCur->right;
			}
		}
		return res;
	}
};
===========================================
145. Binary Tree Postorder Traversal
Given a binary tree, return the postorder traversal of its nodes' values.
