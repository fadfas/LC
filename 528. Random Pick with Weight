class Solution {
public:
    Solution(vector<int> w) {
        sum=w;
        for(int i=1;i<w.size();++i){
            sum[i]=sum[i-1]+w[i];
        }
    }
    
    int pickIndex() {
        //srand(int(time(0)));
        int ran=rand()%sum.back();
        int left=0,right=sum.size();
        while(left<right){
            int mid=left+((right-left)>>1);
            if(sum[mid]<=ran)
                left=mid+1;
            else
                right=mid;
        }
        return right;
    }
private:
    vector<int> sum;
};

/**
 * Your Solution object will be instantiated and called as such:
 * Solution obj = new Solution(w);
 * int param_1 = obj.pickIndex();
 */
 ==========================================
 528. Random Pick with Weight
Given an array w of positive integers, where w[i] describes the weight of index i, write a function pickIndex which randomly picks an index in proportion to its weight.

Note:

1 <= w.length <= 10000
1 <= w[i] <= 10^5
pickIndex will be called at most 10000 times.
Example 1:

Input: 
["Solution","pickIndex"]
[[[1]],[]]
Output: [null,0]
Example 2:

Input: 
["Solution","pickIndex","pickIndex","pickIndex","pickIndex","pickIndex"]
[[[1,3]],[],[],[],[],[]]
Output: [null,0,1,1,1,0]
