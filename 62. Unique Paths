class Solution {
public:
    int uniquePaths(int m, int n) {
        vector<int> dp(n, 1);
        // vector<vector<int> > dp(m, vector<int>(n, 1));
        for (int i = 1; i < m;++i){
            for (int j = 1; j < n;++j){
                dp[j] = dp[j] + dp[j - 1];
            }
        }
        return dp[n - 1];
    }
};
============================================
此解答分析过程很好，可以参考
https://leetcode.com/problems/unique-paths/discuss/22954/0ms-5-lines-DP-Solution-in-C%2B%2B-with-Explanations
62. Unique Paths
A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).

The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).

How many possible unique paths are there?
