class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    int maxDepth(Node* root) {
        if(root==nullptr){
            return 0;
        }
        int res = 0;
        helper(root, res, 1);
        return res;
    }

private:
    void helper(Node* p,int &res,int cur){
        if(p->children.size()==0){
            res = max(res, cur);
            return;
        }
        for(Node *child:p->children){
            helper(child, res, cur + 1);
        }
    }
};
=====================================================================
559. Maximum Depth of N-ary Tree
Given a n-ary tree, find its maximum depth.
The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.
Nary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value (See examples).
