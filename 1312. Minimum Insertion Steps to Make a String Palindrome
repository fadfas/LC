class Solution {
public:
    int minInsertions(string s) {
        if(s.size()<=1){
            return 0;
        }
        int n=s.size();
        vector<vector<int>> dp(n,vector<int>(n,0));
        for(int i=n-2;i>=0;--i){
            for(int j=i+1;j<n;++j){
                if(s[i]==s[j]){
                    dp[i][j]=dp[i+1][j-1];
                }else{
                    dp[i][j]=min(dp[i+1][j],dp[i][j-1])+1;
                }
            }
        }
        return dp[0][n-1];
    }
};
=====================================================================
1312. Minimum Insertion Steps to Make a String Palindrome
Given a string s. In one step you can insert any character at any index of the string.
Return the minimum number of steps to make s palindrome.
A Palindrome String is one that reads the same backward as well as forward.
