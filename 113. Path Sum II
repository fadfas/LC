class Solution {
public:
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<vector<int> > res;
        if(root==nullptr){
            return res;
        }
        vector<int> tmp;
        helper(root, targetSum, res, tmp);
        return res;
    }

private:
    void helper(TreeNode* p,int targetSum,vector<vector<int>> &res,vector<int> tmp){
        tmp.emplace_back(p->val);
        targetSum -= p->val;
        if (p->left == nullptr && p->right == nullptr)
        {
            if(targetSum==0){
                res.emplace_back(tmp);
            }
            return;
        }
        if(p->left){
            helper(p->left, targetSum, res, tmp);
        }
        if(p->right){
            helper(p->right, targetSum, res, tmp);
        }
    }
};
==================================================
113. Path Sum II
Given a binary tree and a sum, find all root-to-leaf paths where each path's sum equals the given sum.
