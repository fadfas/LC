class Solution {
public:
    vector<int> largestValues(TreeNode* root) {
        vector<int> res;
        if(root==nullptr){
            return res;
        }
        queue<TreeNode *> q;
        q.push(root);
        while(!q.empty()){
            int size = q.size();
            int max_node = INT_MIN;
            for (int i = 0; i < size;++i){
                TreeNode *pCur = q.front();
                max_node = max(max_node, pCur->val);
                q.pop();
                if(pCur->left){
                    q.push(pCur->left);
                }
                if(pCur->right){
                    q.push(pCur->right);
                }
            }
            res.push_back(max_node);
        }
        return res;
    }
};
=====================================================================
515. Find Largest Value in Each Tree Row
Given the root of a binary tree, return an array of the largest value in each row of the tree (0-indexed).
